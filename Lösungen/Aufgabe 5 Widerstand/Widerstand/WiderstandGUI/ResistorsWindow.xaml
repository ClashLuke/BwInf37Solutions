<material:MaterialWindow x:Class="WiderstandGUI.ResistorsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WiderstandGUI"
        xmlns:material="clr-namespace:MaterialDesign2.Controls;assembly=MaterialDesign2"
        mc:Ignorable="d"
        Title="Settings" Height="450" Width="281" LabelBrush="White" Foreground="{DynamicResource HighImportanceColorShade}">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="53*"/>
            <RowDefinition Height="366*"/>
        </Grid.RowDefinitions>

        <TextBlock x:Name="resistorsText" Margin="10" TextWrapping="Wrap" Text="Resistors" Foreground="{DynamicResource Text}" VerticalAlignment="Center" FontSize="22" FontWeight="SemiBold"/>

        <ScrollViewer VerticalScrollBarVisibility="Auto" Grid.Row="1">
            <ScrollViewer.Template>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Rectangle x:Name="Corner" Grid.Column="1" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.Row="1"/>
                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0"/>
                        <material:MaterialScrollBar x:Name="PART_VerticalScrollBar" Foreground="{TemplateBinding Foreground}" Background="{TemplateBinding Background}" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Width="10"/>
                        <material:MaterialScrollBar x:Name="PART_HorizontalScrollBar" Foreground="{TemplateBinding Foreground}" Background="{TemplateBinding Background}" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" Height="10"/>
                    </Grid>
                </ControlTemplate>
            </ScrollViewer.Template>
            <ItemsControl x:Name="Resistors" Background="White">
                <ItemsControl.ItemTemplate>
                    <ItemContainerTemplate>
                        <Grid Margin="0,5">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition Height="0*"/>
                            </Grid.RowDefinitions>
                            <material:MaterialTextBoxFilled Margin="20,0" Text="{Binding Value, Mode=TwoWay}" Width="Auto" Height="35" VerticalAlignment="Top" 
                                                            Background="White" FontWeight="Normal" Foreground="{DynamicResource Text}" BorderThickness="0" 
                                                            FontSize="20" LostFocus="TextBox_LostFocus" IndicatorThickness="2.5" LeftMinWidth="0" RightMinWidth="0" 
                                                            NumberPane="RealPlus" LeftWidth="0.01*" RightWidth="0.01*" RowsPaddingBottomHeight="0.4*" 
                                                            ActiveLabelBrush="{DynamicResource HighImportanceColorShade}" 
                                                            SelectionBrush="{DynamicResource HighImportanceColor}"/>
                            <Separator Grid.Row="1" Margin="10,2"/>
                        </Grid>
                    </ItemContainerTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </ScrollViewer>
        <material:MaterialButton Margin="0,0,10,150" HorizontalAlignment="Right" VerticalAlignment="Bottom" CornerRadius="1E+99" Width="60" Height="60" ShadowEnabled="True" Background="{DynamicResource HighImportanceColor}" LeftMinWidth="0" RightMinWidth="0" FontWeight="SemiBold" FontSize="36" Click="Add_Click" Grid.Row="1">
            <Path Margin="13" StrokeThickness="3" Data="M-1,0L1,0 M0,-1L0,1" Stroke="{DynamicResource Text}" StrokeEndLineCap="Round" StrokeStartLineCap="Round" Stretch="Fill"/>
        </material:MaterialButton>
        <material:MaterialButton Margin="0,0,10,80" HorizontalAlignment="Right" VerticalAlignment="Bottom" CornerRadius="1E+99" Width="60" Height="60" ShadowEnabled="True" Background="White" LeftMinWidth="0" RightMinWidth="0" FontWeight="SemiBold" FontSize="36" Click="Generate_Click" Grid.Row="1">
            <Grid Margin="5" Height="28">
                <Path Margin="4" StrokeThickness="3" Data="M0,0L2,0M2,0L4,2M4,2L6,2" Stroke="{DynamicResource Text}" StrokeEndLineCap="Round" StrokeStartLineCap="Round" Stretch="Fill"/>
                <Path Margin="4" StrokeThickness="3" Data="M0,2L2,2M2,2L2.6,1.4M3.4,.6L4,0M4,0L6,0" Stroke="{DynamicResource Text}" StrokeEndLineCap="Round" StrokeStartLineCap="Round" Stretch="Fill"/>
            </Grid>
        </material:MaterialButton>
        <material:MaterialButton Margin="0,0,10,10" HorizontalAlignment="Right" VerticalAlignment="Bottom" CornerRadius="1E+99" Width="60" Height="60" ShadowEnabled="True" Background="White" LeftMinWidth="0" RightMinWidth="0" FontWeight="SemiBold" FontSize="36" Click="Load_Click" Grid.Row="1">
            <Grid>
                <Path Margin="13" StrokeThickness="3" Data="M0,0 L1,0 M1,0 L1,1 M1,1 L2,1 M2,1 L2,5 M2,5 L0,5 M0,5 L0,0" Stroke="{DynamicResource Text}" StrokeEndLineCap="Round" StrokeStartLineCap="Round" Stretch="Fill" RenderTransformOrigin="0.5,0.5"/>
                <Path Margin="13" StrokeThickness="3" Data="M0,0 L1,0 M1,0 L1,1" Stroke="{DynamicResource Text}" StrokeEndLineCap="Round" StrokeStartLineCap="Round" Stretch="Fill" RenderTransformOrigin="0.5,0.5"/>
            </Grid>
        </material:MaterialButton>

        <Popup StaysOpen="False" x:Name="generatePopup" Grid.RowSpan="2" Placement="Right" AllowsTransparency="True" PopupAnimation="Fade">
            <Grid Height="287" Width="376">
                <Border Background="White" Grid.RowSpan="3" Grid.ColumnSpan="2" CornerRadius="4">
                    <Border.Effect>
                        <DropShadowEffect BlurRadius="15" Direction="-90" RenderingBias="Quality" ShadowDepth="3" Opacity="0.25"/>
                    </Border.Effect>
                </Border>
                
                <Grid Margin="5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="1*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>

                    <material:MaterialTextBoxFilled x:Name="min" Text="0" NumberPane="RealPlusMinus" Label="Min" Margin="5" SelectionBrush="{DynamicResource HighImportanceColor}" ActiveLabelBrush="{DynamicResource HighImportanceColorShade}" />
                    <material:MaterialTextBoxFilled x:Name="max" Text="1000" NumberPane="RealPlusMinus" Label="Max"  Margin="5" SelectionBrush="{DynamicResource HighImportanceColor}" ActiveLabelBrush="{DynamicResource HighImportanceColorShade}" Grid.Column="1" />
                    <material:MaterialTextBoxFilled x:Name="count" Text="100" NumberPane="WholePlus" Label="Count" Margin="5" SelectionBrush="{DynamicResource HighImportanceColor}" ActiveLabelBrush="{DynamicResource HighImportanceColorShade}" Grid.ColumnSpan="2" Grid.Row="1" />
                    <material:MaterialButton x:Name="allowFractions" UseLayoutRounding="True" Text="Allow Fractions" Margin="5" ShadowEnabled="True" CornerRadius="4" Background="#FF747474" Grid.Row="2" FontSize="25" FontWeight="Medium" IsToggleButton="True" Foreground="White" ToggledOverlay="{DynamicResource HighImportanceColor}" ToggledOpacity="0.5" TouchOverlay="White" HoverOverlay="White" Grid.ColumnSpan="2">
                        <material:MaterialButton.Style>
                            <Style TargetType="{x:Type material:MaterialButton}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsToggledOn, RelativeSource={RelativeSource Self}}" Value="True">
                                        <Setter Property="material:MaterialButton.HoverOverlay" Value="Black"/>
                                        <Setter Property="material:MaterialButton.TouchOverlay" Value="Black"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=IsToggledOn, RelativeSource={RelativeSource Self}}" Value="False">
                                        <Setter Property="material:MaterialButton.HoverOverlay" Value="White"/>
                                        <Setter Property="material:MaterialButton.TouchOverlay" Value="White"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </material:MaterialButton.Style>
                    </material:MaterialButton>
                    <material:MaterialButton x:Name="confirm" Text="CONFIRM" CornerRadius="4" Margin="5,5,0,5" Grid.Row="3" Background="White" Foreground="{DynamicResource HighImportanceColor}" Click="Confirm_Click"/>
                    <material:MaterialButton x:Name="cancel" Text="CANCEL" CornerRadius="4" Margin="0,5,5,5" Grid.Row="3" Grid.Column="1" Background="White" Foreground="{DynamicResource HighImportanceColor}" Click="Cancel_Click"/>
                </Grid>
            </Grid>
        </Popup>
    </Grid>
</material:MaterialWindow>
